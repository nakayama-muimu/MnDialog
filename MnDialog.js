// Generated by Haxe 3.4.7
(function ($hx_exports) { "use strict";
var MnDialog = $hx_exports["MnDialog"] = function(width,height,id,cssPrefix) {
	if(height == null) {
		height = 150;
	}
	if(width == null) {
		width = 250;
	}
	this.id = "";
	this.colorBase = "#eeeeff";
	this.colorButton = "#6666ff";
	this.colorTitle = "#9999ff";
	if(id != null) {
		this.id = id;
	}
	if(cssPrefix != null) {
		this.cssPrefix = cssPrefix;
	} else {
		this.cssPrefix = "mndlg_" + new Date().getTime();
	}
	this.width = width;
	this.height = height;
	this.outputCSS();
	cssPrefix = this.cssPrefix + "_";
	this.divBG = window.document.createElement("div");
	this.divBG.className = cssPrefix + "bg";
	window.document.body.appendChild(this.divBG);
	this.divBase = window.document.createElement("div");
	this.divBase.className = cssPrefix + "base";
	if(this.id != "") {
		this.divBase.id = this.id;
	}
	this.divBG.appendChild(this.divBase);
	this.divTitle = window.document.createElement("div");
	this.divTitle.className = cssPrefix + "title";
	this.divTitle.textContent = "Title";
	this.divBase.appendChild(this.divTitle);
	this.divBody = window.document.createElement("div");
	this.divBody.innerHTML = "Body<br>\n        <ul>\n        <li>aaa</li><li>bbb</li><li>ccc</li></ul>";
	this.divBody.className = cssPrefix + "body";
	this.divBase.appendChild(this.divBody);
	this.divButtons = window.document.createElement("div");
	this.divButtons.className = cssPrefix + "buttons";
	this.divBase.appendChild(this.divButtons);
	var bt1 = window.document.createElement("button");
	bt1.textContent = "Button 1";
	bt1.className = cssPrefix + "button";
	this.divButtons.appendChild(bt1);
	var evAction = "click";
	if(Object.prototype.hasOwnProperty.call(window,"ontouchend")) {
		evAction = "touchend";
	}
	bt1.addEventListener(evAction,$bind(this,this.cbButton1));
};
MnDialog.prototype = {
	outputCSS: function() {
		var oCSS = window.document.getElementById(this.cssPrefix);
		if(oCSS != null) {
			window.document.head.removeChild(oCSS);
		}
		var cssPrefix = this.cssPrefix + "_";
		var css = "." + cssPrefix + "bg{\n    display: none;\n    background-color: rgba(0, 0, 0, 0.2);\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n." + cssPrefix + "base{\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: " + this.width + "px;\n    min-height: " + this.height + "px;\n    transform: translate(-50%, -50%);\n    background-color: " + this.colorBase + ";\n    border: solid 2px " + this.colorTitle + ";\n    border-radius: 3px;\n}\n." + cssPrefix + "title{\n    background-color: " + this.colorTitle + ";\n    padding: 3px;\n}\n." + cssPrefix + "body{\n    padding: 3px;\n}\n." + cssPrefix + "buttons{\n    text-align: center;\n    padding: 3px;\n}\n." + cssPrefix + "button{\n    border-style: none;\n    background-color: " + this.colorTitle + ";\n    cursor: pointer;\n}\n." + cssPrefix + "button:hover{\n    background-color: " + this.colorButton + ";\n}";
		var style = window.document.createElement("style");
		style.id = this.cssPrefix;
		style.appendChild(window.document.createTextNode(css));
		window.document.head.appendChild(style);
	}
	,show: function() {
		this.divBG.style.display = "block";
	}
	,cbButton1: function() {
		this.divBG.style.display = "none";
	}
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this);
